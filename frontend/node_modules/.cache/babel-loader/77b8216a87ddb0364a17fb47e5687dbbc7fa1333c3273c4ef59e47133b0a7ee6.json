{"ast":null,"code":"var _jsxFileName = \"/Users/naimur/Downloads/Code/ExpenseTracker/frontend/src/components/reports/Reports.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Box, Typography, Paper, Grid, FormControl, InputLabel, Select, MenuItem, CircularProgress, Alert } from '@mui/material';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend, ArcElement, PointElement, LineElement } from 'chart.js';\nimport { Bar, Pie, Line } from 'react-chartjs-2';\nimport { useExpense } from '../../contexts/ExpenseContext';\nimport { api } from '../../services/api';\n\n// Register ChartJS components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, ArcElement, PointElement, LineElement, Title, Tooltip, Legend);\nconst Reports = () => {\n  _s();\n  const {\n    state\n  } = useExpense();\n  const {\n    loading,\n    error\n  } = state;\n  const [timeFrame, setTimeFrame] = useState('monthly');\n  const [summaryLoading, setSummaryLoading] = useState(false);\n  const [summaryError, setSummaryError] = useState(null);\n\n  // Data for category distribution\n  const [categoryData, setCategoryData] = useState({\n    labels: [],\n    datasets: [{\n      label: 'Amount',\n      data: [],\n      backgroundColor: [],\n      borderColor: [],\n      borderWidth: 1\n    }]\n  });\n\n  // Data for time series\n  const [timeSeriesData, setTimeSeriesData] = useState({\n    labels: [],\n    datasets: [{\n      label: 'Expenses',\n      data: [],\n      backgroundColor: 'rgba(75, 192, 192, 0.2)',\n      borderColor: 'rgba(75, 192, 192, 1)',\n      borderWidth: 2,\n      tension: 0.3\n    }]\n  });\n  const colors = ['rgba(255, 99, 132, 0.8)', 'rgba(54, 162, 235, 0.8)', 'rgba(255, 206, 86, 0.8)', 'rgba(75, 192, 192, 0.8)', 'rgba(153, 102, 255, 0.8)', 'rgba(255, 159, 64, 0.8)', 'rgba(255, 99, 255, 0.8)', 'rgba(54, 162, 86, 0.8)', 'rgba(255, 206, 235, 0.8)', 'rgba(75, 192, 64, 0.8)', 'rgba(153, 102, 132, 0.8)'];\n\n  // Fetch and process data from API\n  useEffect(() => {\n    const fetchSummaryData = async () => {\n      setSummaryLoading(true);\n      try {\n        const summaryData = await api.getExpenseSummary(timeFrame);\n\n        // Process category data\n        const categories = summaryData.category_totals.map(item => item.category);\n        const amounts = summaryData.category_totals.map(item => item.total);\n        const backgroundColors = categories.map((_, index) => colors[index % colors.length]);\n        const borderColors = backgroundColors.map(color => color.replace('0.8', '1'));\n        setCategoryData({\n          labels: categories,\n          datasets: [{\n            label: 'Amount',\n            data: amounts,\n            backgroundColor: backgroundColors,\n            borderColor: borderColors,\n            borderWidth: 1\n          }]\n        });\n\n        // Process time series data\n        const timeLabels = summaryData.time_series.map(item => {\n          const date = new Date(item.period);\n          if (timeFrame === 'weekly') {\n            return `Week ${date.getDate()}/${date.getMonth() + 1}`;\n          } else if (timeFrame === 'monthly') {\n            return date.toLocaleString('default', {\n              month: 'short',\n              year: 'numeric'\n            });\n          }\n          return date.getFullYear().toString();\n        });\n        setTimeSeriesData({\n          labels: timeLabels,\n          datasets: [{\n            label: 'Expenses',\n            data: summaryData.time_series.map(item => item.total),\n            backgroundColor: 'rgba(75, 192, 192, 0.2)',\n            borderColor: 'rgba(75, 192, 192, 1)',\n            borderWidth: 2,\n            tension: 0.3\n          }]\n        });\n        setSummaryError(null);\n      } catch (err) {\n        setSummaryError('Failed to load expense summary');\n        console.error('Failed to fetch summary:', err);\n      } finally {\n        setSummaryLoading(false);\n      }\n    };\n    fetchSummaryData();\n  }, [timeFrame]);\n\n  // Chart options\n  const categoryOptions = {\n    plugins: {\n      title: {\n        display: true,\n        text: 'Expenses by Category',\n        font: {\n          size: 16\n        }\n      }\n    }\n  };\n  const timeSeriesOptions = {\n    plugins: {\n      title: {\n        display: true,\n        text: `Expense Trend (${timeFrame.charAt(0).toUpperCase() + timeFrame.slice(1)})`,\n        font: {\n          size: 16\n        }\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'Amount ($)'\n        }\n      }\n    }\n  };\n  if (loading || summaryLoading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        minHeight: '60vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Expense Reports\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), (error || summaryError) && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 2\n      },\n      children: error || summaryError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        sx: {\n          minWidth: 200\n        },\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          id: \"time-frame-select-label\",\n          children: \"Time Frame\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          labelId: \"time-frame-select-label\",\n          id: \"time-frame-select\",\n          value: timeFrame,\n          label: \"Time Frame\",\n          onChange: e => setTimeFrame(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"weekly\",\n            children: \"Weekly\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"monthly\",\n            children: \"Monthly\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"yearly\",\n            children: \"Yearly\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 4,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          sx: {\n            p: 3\n          },\n          children: categoryData.labels.length > 0 ? /*#__PURE__*/_jsxDEV(Line, {\n            options: timeSeriesOptions,\n            data: timeSeriesData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            align: \"center\",\n            sx: {\n              py: 5\n            },\n            children: \"No expense data available. Add some expenses to see your trends!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          sx: {\n            p: 3\n          },\n          children: categoryData.labels.length > 0 ? /*#__PURE__*/_jsxDEV(Bar, {\n            options: categoryOptions,\n            data: categoryData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            align: \"center\",\n            sx: {\n              py: 5\n            },\n            children: \"No expense data available.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          sx: {\n            p: 3\n          },\n          children: categoryData.labels.length > 0 ? /*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              align: \"center\",\n              gutterBottom: true,\n              children: \"Expense Distribution\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Pie, {\n              data: categoryData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            align: \"center\",\n            sx: {\n              py: 5\n            },\n            children: \"No expense data available.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 5\n  }, this);\n};\n_s(Reports, \"jB05YBmp5ixLytfHqh5h3ANPWE8=\", false, function () {\n  return [useExpense];\n});\n_c = Reports;\nexport default Reports;\nvar _c;\n$RefreshReg$(_c, \"Reports\");","map":{"version":3,"names":["React","useEffect","useState","Box","Typography","Paper","Grid","FormControl","InputLabel","Select","MenuItem","CircularProgress","Alert","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","ArcElement","PointElement","LineElement","Bar","Pie","Line","useExpense","api","jsxDEV","_jsxDEV","register","Reports","_s","state","loading","error","timeFrame","setTimeFrame","summaryLoading","setSummaryLoading","summaryError","setSummaryError","categoryData","setCategoryData","labels","datasets","label","data","backgroundColor","borderColor","borderWidth","timeSeriesData","setTimeSeriesData","tension","colors","fetchSummaryData","summaryData","getExpenseSummary","categories","category_totals","map","item","category","amounts","total","backgroundColors","_","index","length","borderColors","color","replace","timeLabels","time_series","date","Date","period","getDate","getMonth","toLocaleString","month","year","getFullYear","toString","err","console","categoryOptions","plugins","title","display","text","font","size","timeSeriesOptions","charAt","toUpperCase","slice","scales","y","beginAtZero","sx","justifyContent","alignItems","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","gutterBottom","severity","mb","minWidth","id","labelId","value","onChange","e","target","container","spacing","xs","elevation","p","options","align","py","md","_c","$RefreshReg$"],"sources":["/Users/naimur/Downloads/Code/ExpenseTracker/frontend/src/components/reports/Reports.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Box, Typography, Paper, Grid, FormControl, InputLabel, Select, MenuItem, CircularProgress, Alert } from '@mui/material';\nimport { \n  Chart as ChartJS, \n  CategoryScale, \n  LinearScale, \n  BarElement, \n  Title, \n  Tooltip, \n  Legend, \n  ArcElement,\n  PointElement,\n  LineElement\n} from 'chart.js';\nimport { Bar, Pie, Line } from 'react-chartjs-2';\nimport { useExpense } from '../../contexts/ExpenseContext';\nimport { ExpenseCategory } from '../../types/expense';\nimport { api } from '../../services/api';\n\n// Register ChartJS components\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  ArcElement,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst Reports: React.FC = () => {\n  const { state } = useExpense();\n  const { loading, error } = state;\n  const [timeFrame, setTimeFrame] = useState<'weekly' | 'monthly' | 'yearly'>('monthly');\n  const [summaryLoading, setSummaryLoading] = useState(false);\n  const [summaryError, setSummaryError] = useState<string | null>(null);\n  \n  // Data for category distribution\n  const [categoryData, setCategoryData] = useState<{\n    labels: string[];\n    datasets: {\n      label: string;\n      data: number[];\n      backgroundColor: string[];\n      borderColor: string[];\n      borderWidth: number;\n    }[];\n  }>({\n    labels: [],\n    datasets: [\n      {\n        label: 'Amount',\n        data: [],\n        backgroundColor: [],\n        borderColor: [],\n        borderWidth: 1,\n      },\n    ],\n  });\n\n  // Data for time series\n  const [timeSeriesData, setTimeSeriesData] = useState<{\n    labels: string[];\n    datasets: {\n      label: string;\n      data: number[];\n      backgroundColor: string;\n      borderColor: string;\n      borderWidth: number;\n      tension: number;\n    }[];\n  }>({\n    labels: [],\n    datasets: [\n      {\n        label: 'Expenses',\n        data: [],\n        backgroundColor: 'rgba(75, 192, 192, 0.2)',\n        borderColor: 'rgba(75, 192, 192, 1)',\n        borderWidth: 2,\n        tension: 0.3,\n      },\n    ],\n  });\n\n  const colors = [\n    'rgba(255, 99, 132, 0.8)',\n    'rgba(54, 162, 235, 0.8)',\n    'rgba(255, 206, 86, 0.8)',\n    'rgba(75, 192, 192, 0.8)',\n    'rgba(153, 102, 255, 0.8)',\n    'rgba(255, 159, 64, 0.8)',\n    'rgba(255, 99, 255, 0.8)',\n    'rgba(54, 162, 86, 0.8)',\n    'rgba(255, 206, 235, 0.8)',\n    'rgba(75, 192, 64, 0.8)',\n    'rgba(153, 102, 132, 0.8)',\n  ];\n\n  // Fetch and process data from API\n  useEffect(() => {\n    const fetchSummaryData = async () => {\n      setSummaryLoading(true);\n      try {\n        const summaryData = await api.getExpenseSummary(timeFrame);\n        \n        // Process category data\n        const categories = summaryData.category_totals.map((item: any) => item.category);\n        const amounts = summaryData.category_totals.map((item: any) => item.total);\n        const backgroundColors = categories.map((_: any, index: number) => colors[index % colors.length]);\n        const borderColors = backgroundColors.map((color: string) => color.replace('0.8', '1'));\n        \n        setCategoryData({\n          labels: categories,\n          datasets: [\n            {\n              label: 'Amount',\n              data: amounts,\n              backgroundColor: backgroundColors,\n              borderColor: borderColors,\n              borderWidth: 1,\n            },\n          ],\n        });\n\n        // Process time series data\n        const timeLabels = summaryData.time_series.map((item: any) => {\n          const date = new Date(item.period);\n          if (timeFrame === 'weekly') {\n            return `Week ${date.getDate()}/${date.getMonth() + 1}`;\n          } else if (timeFrame === 'monthly') {\n            return date.toLocaleString('default', { month: 'short', year: 'numeric' });\n          }\n          return date.getFullYear().toString();\n        });\n        \n        setTimeSeriesData({\n          labels: timeLabels,\n          datasets: [\n            {\n              label: 'Expenses',\n              data: summaryData.time_series.map((item: any) => item.total),\n              backgroundColor: 'rgba(75, 192, 192, 0.2)',\n              borderColor: 'rgba(75, 192, 192, 1)',\n              borderWidth: 2,\n              tension: 0.3,\n            },\n          ],\n        });\n\n        setSummaryError(null);\n      } catch (err) {\n        setSummaryError('Failed to load expense summary');\n        console.error('Failed to fetch summary:', err);\n      } finally {\n        setSummaryLoading(false);\n      }\n    };\n\n    fetchSummaryData();\n  }, [timeFrame]);\n\n  // Chart options\n  const categoryOptions = {\n    plugins: {\n      title: {\n        display: true,\n        text: 'Expenses by Category',\n        font: {\n          size: 16,\n        },\n      },\n    },\n  };\n\n  const timeSeriesOptions = {\n    plugins: {\n      title: {\n        display: true,\n        text: `Expense Trend (${timeFrame.charAt(0).toUpperCase() + timeFrame.slice(1)})`,\n        font: {\n          size: 16,\n        },\n      },\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'Amount ($)',\n        },\n      },\n    },\n  };\n\n  if (loading || summaryLoading) {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', minHeight: '60vh' }}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  return (\n    <Box>\n      <Typography variant=\"h4\" gutterBottom>\n        Expense Reports\n      </Typography>\n\n      {(error || summaryError) && (\n        <Alert severity=\"error\" sx={{ mb: 2 }}>\n          {error || summaryError}\n        </Alert>\n      )}\n\n      <Box sx={{ mb: 4 }}>\n        <FormControl sx={{ minWidth: 200 }}>\n          <InputLabel id=\"time-frame-select-label\">Time Frame</InputLabel>\n          <Select\n            labelId=\"time-frame-select-label\"\n            id=\"time-frame-select\"\n            value={timeFrame}\n            label=\"Time Frame\"\n            onChange={(e) => setTimeFrame(e.target.value as 'weekly' | 'monthly' | 'yearly')}\n          >\n            <MenuItem value=\"weekly\">Weekly</MenuItem>\n            <MenuItem value=\"monthly\">Monthly</MenuItem>\n            <MenuItem value=\"yearly\">Yearly</MenuItem>\n          </Select>\n        </FormControl>\n      </Box>\n\n      <Grid container spacing={4}>\n        {/* Time Series Chart */}\n        <Grid item xs={12}>\n          <Paper elevation={3} sx={{ p: 3 }}>\n            {categoryData.labels.length > 0 ? (\n              <Line options={timeSeriesOptions} data={timeSeriesData} />\n            ) : (\n              <Typography variant=\"body1\" align=\"center\" sx={{ py: 5 }}>\n                No expense data available. Add some expenses to see your trends!\n              </Typography>\n            )}\n          </Paper>\n        </Grid>\n\n        {/* Category Distribution */}\n        <Grid item xs={12} md={6}>\n          <Paper elevation={3} sx={{ p: 3 }}>\n            {categoryData.labels.length > 0 ? (\n              <Bar options={categoryOptions} data={categoryData} />\n            ) : (\n              <Typography variant=\"body1\" align=\"center\" sx={{ py: 5 }}>\n                No expense data available.\n              </Typography>\n            )}\n          </Paper>\n        </Grid>\n\n        {/* Pie Chart */}\n        <Grid item xs={12} md={6}>\n          <Paper elevation={3} sx={{ p: 3 }}>\n            {categoryData.labels.length > 0 ? (\n              <Box>\n                <Typography variant=\"h6\" align=\"center\" gutterBottom>\n                  Expense Distribution\n                </Typography>\n                <Pie data={categoryData} />\n              </Box>\n            ) : (\n              <Typography variant=\"body1\" align=\"center\" sx={{ py: 5 }}>\n                No expense data available.\n              </Typography>\n            )}\n          </Paper>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default Reports;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}