{"ast":null,"code":"var _jsxFileName = \"/Users/naimur/Downloads/Code/ExpenseTracker/frontend/src/components/reports/Reports.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Box, Typography, Paper, Grid, FormControl, InputLabel, Select, MenuItem } from '@mui/material';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend, ArcElement, PointElement, LineElement } from 'chart.js';\nimport { Bar, Pie, Line } from 'react-chartjs-2';\nimport { useExpense } from '../../contexts/ExpenseContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Register ChartJS components\nChartJS.register(CategoryScale, LinearScale, BarElement, ArcElement, PointElement, LineElement, Title, Tooltip, Legend);\nconst Reports = () => {\n  _s();\n  const {\n    state\n  } = useExpense();\n  const {\n    expenses\n  } = state;\n  const [timeFrame, setTimeFrame] = useState('monthly');\n\n  // Data for category distribution\n  const [categoryData, setCategoryData] = useState({\n    labels: [],\n    datasets: [{\n      label: 'Amount',\n      data: [],\n      backgroundColor: [],\n      borderColor: [],\n      borderWidth: 1\n    }]\n  });\n\n  // Data for time series\n  const [timeSeriesData, setTimeSeriesData] = useState({\n    labels: [],\n    datasets: [{\n      label: 'Expenses',\n      data: [],\n      backgroundColor: 'rgba(75, 192, 192, 0.2)',\n      borderColor: 'rgba(75, 192, 192, 1)',\n      borderWidth: 2,\n      tension: 0.3\n    }]\n  });\n  const colors = ['rgba(255, 99, 132, 0.8)', 'rgba(54, 162, 235, 0.8)', 'rgba(255, 206, 86, 0.8)', 'rgba(75, 192, 192, 0.8)', 'rgba(153, 102, 255, 0.8)', 'rgba(255, 159, 64, 0.8)', 'rgba(255, 99, 255, 0.8)', 'rgba(54, 162, 86, 0.8)', 'rgba(255, 206, 235, 0.8)', 'rgba(75, 192, 64, 0.8)', 'rgba(153, 102, 132, 0.8)'];\n\n  // Process data for category distribution chart\n  useEffect(() => {\n    const categoryTotals = {};\n    expenses.forEach(expense => {\n      const {\n        category,\n        amount\n      } = expense;\n      categoryTotals[category] = (categoryTotals[category] || 0) + amount;\n    });\n    const categories = Object.keys(categoryTotals);\n    const amounts = categories.map(category => categoryTotals[category]);\n    const backgroundColors = categories.map((_, index) => colors[index % colors.length]);\n    const borderColors = backgroundColors.map(color => color.replace('0.8', '1'));\n    setCategoryData({\n      labels: categories,\n      datasets: [{\n        label: 'Amount',\n        data: amounts,\n        backgroundColor: backgroundColors,\n        borderColor: borderColors,\n        borderWidth: 1\n      }]\n    });\n  }, [expenses]);\n\n  // Process data for time series chart based on selected timeframe\n  useEffect(() => {\n    // Helper function to group expenses\n    const groupExpensesByPeriod = () => {\n      const groupedData = {};\n      expenses.forEach(expense => {\n        const date = new Date(expense.date);\n        let periodKey = '';\n        if (timeFrame === 'weekly') {\n          // Group by ISO week (1-52)\n          const weekNumber = getWeekNumber(date);\n          const year = date.getFullYear();\n          periodKey = `W${weekNumber} ${year}`;\n        } else if (timeFrame === 'monthly') {\n          // Group by month (Jan-Dec)\n          periodKey = `${date.toLocaleString('default', {\n            month: 'short'\n          })} ${date.getFullYear()}`;\n        } else {\n          // Group by year\n          periodKey = `${date.getFullYear()}`;\n        }\n        groupedData[periodKey] = (groupedData[periodKey] || 0) + expense.amount;\n      });\n      return groupedData;\n    };\n\n    // Helper function to get week number\n    const getWeekNumber = date => {\n      const d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\n      d.setUTCDate(d.getUTCDate() + 4 - (d.getUTCDay() || 7));\n      const yearStart = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\n      const weekNumber = Math.ceil(((d.getTime() - yearStart.getTime()) / 86400000 + 1) / 7);\n      return weekNumber;\n    };\n    const groupedExpenses = groupExpensesByPeriod();\n\n    // Sort keys based on timeframe\n    const sortKeys = keys => {\n      if (timeFrame === 'weekly') {\n        return keys.sort((a, b) => {\n          const [weekA, yearA] = a.split(' ');\n          const [weekB, yearB] = b.split(' ');\n          return Number(yearA) - Number(yearB) || Number(weekA.substring(1)) - Number(weekB.substring(1));\n        });\n      } else if (timeFrame === 'monthly') {\n        const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n        return keys.sort((a, b) => {\n          const [monthA, yearA] = a.split(' ');\n          const [monthB, yearB] = b.split(' ');\n          return Number(yearA) - Number(yearB) || months.indexOf(monthA) - months.indexOf(monthB);\n        });\n      }\n      return keys.sort();\n    };\n    const sortedKeys = sortKeys(Object.keys(groupedExpenses));\n    const sortedValues = sortedKeys.map(key => groupedExpenses[key]);\n    setTimeSeriesData({\n      labels: sortedKeys,\n      datasets: [{\n        label: 'Expenses',\n        data: sortedValues,\n        backgroundColor: 'rgba(75, 192, 192, 0.2)',\n        borderColor: 'rgba(75, 192, 192, 1)',\n        borderWidth: 2,\n        tension: 0.3\n      }]\n    });\n  }, [expenses, timeFrame]);\n\n  // Chart options\n  const categoryOptions = {\n    plugins: {\n      title: {\n        display: true,\n        text: 'Expenses by Category',\n        font: {\n          size: 16\n        }\n      }\n    }\n  };\n  const timeSeriesOptions = {\n    plugins: {\n      title: {\n        display: true,\n        text: `Expense Trend (${timeFrame.charAt(0).toUpperCase() + timeFrame.slice(1)})`,\n        font: {\n          size: 16\n        }\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'Amount ($)'\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Expense Reports\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        sx: {\n          minWidth: 200\n        },\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          id: \"time-frame-select-label\",\n          children: \"Time Frame\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          labelId: \"time-frame-select-label\",\n          id: \"time-frame-select\",\n          value: timeFrame,\n          label: \"Time Frame\",\n          onChange: e => setTimeFrame(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"weekly\",\n            children: \"Weekly\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"monthly\",\n            children: \"Monthly\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"yearly\",\n            children: \"Yearly\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 4,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          sx: {\n            p: 3\n          },\n          children: expenses.length > 0 ? /*#__PURE__*/_jsxDEV(Line, {\n            options: timeSeriesOptions,\n            data: timeSeriesData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            align: \"center\",\n            sx: {\n              py: 5\n            },\n            children: \"No expense data available. Add some expenses to see your trends!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          sx: {\n            p: 3\n          },\n          children: expenses.length > 0 ? /*#__PURE__*/_jsxDEV(Bar, {\n            options: categoryOptions,\n            data: categoryData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            align: \"center\",\n            sx: {\n              py: 5\n            },\n            children: \"No expense data available.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          sx: {\n            p: 3\n          },\n          children: expenses.length > 0 ? /*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              align: \"center\",\n              gutterBottom: true,\n              children: \"Expense Distribution\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Pie, {\n              data: categoryData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            align: \"center\",\n            sx: {\n              py: 5\n            },\n            children: \"No expense data available.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 240,\n    columnNumber: 5\n  }, this);\n};\n_s(Reports, \"yDzj2vi7ewMgFmv39YfIeMFukEs=\", false, function () {\n  return [useExpense];\n});\n_c = Reports;\nexport default Reports;\nvar _c;\n$RefreshReg$(_c, \"Reports\");","map":{"version":3,"names":["React","useEffect","useState","Box","Typography","Paper","Grid","FormControl","InputLabel","Select","MenuItem","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","ArcElement","PointElement","LineElement","Bar","Pie","Line","useExpense","jsxDEV","_jsxDEV","register","Reports","_s","state","expenses","timeFrame","setTimeFrame","categoryData","setCategoryData","labels","datasets","label","data","backgroundColor","borderColor","borderWidth","timeSeriesData","setTimeSeriesData","tension","colors","categoryTotals","forEach","expense","category","amount","categories","Object","keys","amounts","map","backgroundColors","_","index","length","borderColors","color","replace","groupExpensesByPeriod","groupedData","date","Date","periodKey","weekNumber","getWeekNumber","year","getFullYear","toLocaleString","month","d","UTC","getMonth","getDate","setUTCDate","getUTCDate","getUTCDay","yearStart","getUTCFullYear","Math","ceil","getTime","groupedExpenses","sortKeys","sort","a","b","weekA","yearA","split","weekB","yearB","Number","substring","months","monthA","monthB","indexOf","sortedKeys","sortedValues","key","categoryOptions","plugins","title","display","text","font","size","timeSeriesOptions","charAt","toUpperCase","slice","scales","y","beginAtZero","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","sx","mb","minWidth","id","labelId","value","onChange","e","target","container","spacing","item","xs","elevation","p","options","align","py","md","_c","$RefreshReg$"],"sources":["/Users/naimur/Downloads/Code/ExpenseTracker/frontend/src/components/reports/Reports.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Box, Typography, Paper, Grid, FormControl, InputLabel, Select, MenuItem } from '@mui/material';\nimport { \n  Chart as ChartJS, \n  CategoryScale, \n  LinearScale, \n  BarElement, \n  Title, \n  Tooltip, \n  Legend, \n  ArcElement,\n  PointElement,\n  LineElement\n} from 'chart.js';\nimport { Bar, Pie, Line } from 'react-chartjs-2';\nimport { useExpense } from '../../contexts/ExpenseContext';\nimport { ExpenseCategory } from '../../types/expense';\n\n// Register ChartJS components\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  ArcElement,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst Reports: React.FC = () => {\n  const { state } = useExpense();\n  const { expenses } = state;\n  \n  const [timeFrame, setTimeFrame] = useState<'weekly' | 'monthly' | 'yearly'>('monthly');\n  \n  // Data for category distribution\n  const [categoryData, setCategoryData] = useState<{\n    labels: string[];\n    datasets: {\n      label: string;\n      data: number[];\n      backgroundColor: string[];\n      borderColor: string[];\n      borderWidth: number;\n    }[];\n  }>({\n    labels: [],\n    datasets: [\n      {\n        label: 'Amount',\n        data: [],\n        backgroundColor: [],\n        borderColor: [],\n        borderWidth: 1,\n      },\n    ],\n  });\n\n  // Data for time series\n  const [timeSeriesData, setTimeSeriesData] = useState<{\n    labels: string[];\n    datasets: {\n      label: string;\n      data: number[];\n      backgroundColor: string;\n      borderColor: string;\n      borderWidth: number;\n      tension: number;\n    }[];\n  }>({\n    labels: [],\n    datasets: [\n      {\n        label: 'Expenses',\n        data: [],\n        backgroundColor: 'rgba(75, 192, 192, 0.2)',\n        borderColor: 'rgba(75, 192, 192, 1)',\n        borderWidth: 2,\n        tension: 0.3,\n      },\n    ],\n  });\n\n  const colors = [\n    'rgba(255, 99, 132, 0.8)',\n    'rgba(54, 162, 235, 0.8)',\n    'rgba(255, 206, 86, 0.8)',\n    'rgba(75, 192, 192, 0.8)',\n    'rgba(153, 102, 255, 0.8)',\n    'rgba(255, 159, 64, 0.8)',\n    'rgba(255, 99, 255, 0.8)',\n    'rgba(54, 162, 86, 0.8)',\n    'rgba(255, 206, 235, 0.8)',\n    'rgba(75, 192, 64, 0.8)',\n    'rgba(153, 102, 132, 0.8)',\n  ];\n\n  // Process data for category distribution chart\n  useEffect(() => {\n    const categoryTotals: Record<string, number> = {};\n    \n    expenses.forEach(expense => {\n      const { category, amount } = expense;\n      categoryTotals[category] = (categoryTotals[category] || 0) + amount;\n    });\n    \n    const categories = Object.keys(categoryTotals);\n    const amounts = categories.map(category => categoryTotals[category]);\n    const backgroundColors = categories.map((_, index) => colors[index % colors.length]);\n    const borderColors = backgroundColors.map(color => color.replace('0.8', '1'));\n    \n    setCategoryData({\n      labels: categories,\n      datasets: [\n        {\n          label: 'Amount',\n          data: amounts,\n          backgroundColor: backgroundColors,\n          borderColor: borderColors,\n          borderWidth: 1,\n        },\n      ],\n    });\n  }, [expenses]);\n\n  // Process data for time series chart based on selected timeframe\n  useEffect(() => {\n    // Helper function to group expenses\n    const groupExpensesByPeriod = () => {\n      const groupedData: Record<string, number> = {};\n      \n      expenses.forEach(expense => {\n        const date = new Date(expense.date);\n        let periodKey = '';\n        \n        if (timeFrame === 'weekly') {\n          // Group by ISO week (1-52)\n          const weekNumber = getWeekNumber(date);\n          const year = date.getFullYear();\n          periodKey = `W${weekNumber} ${year}`;\n        } else if (timeFrame === 'monthly') {\n          // Group by month (Jan-Dec)\n          periodKey = `${date.toLocaleString('default', { month: 'short' })} ${date.getFullYear()}`;\n        } else {\n          // Group by year\n          periodKey = `${date.getFullYear()}`;\n        }\n        \n        groupedData[periodKey] = (groupedData[periodKey] || 0) + expense.amount;\n      });\n      \n      return groupedData;\n    };\n    \n    // Helper function to get week number\n    const getWeekNumber = (date: Date) => {\n      const d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\n      d.setUTCDate(d.getUTCDate() + 4 - (d.getUTCDay() || 7));\n      const yearStart = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\n      const weekNumber = Math.ceil((((d.getTime() - yearStart.getTime()) / 86400000) + 1) / 7);\n      return weekNumber;\n    };\n    \n    const groupedExpenses = groupExpensesByPeriod();\n    \n    // Sort keys based on timeframe\n    const sortKeys = (keys: string[]) => {\n      if (timeFrame === 'weekly') {\n        return keys.sort((a, b) => {\n          const [weekA, yearA] = a.split(' ');\n          const [weekB, yearB] = b.split(' ');\n          return Number(yearA) - Number(yearB) || Number(weekA.substring(1)) - Number(weekB.substring(1));\n        });\n      } else if (timeFrame === 'monthly') {\n        const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n        return keys.sort((a, b) => {\n          const [monthA, yearA] = a.split(' ');\n          const [monthB, yearB] = b.split(' ');\n          return Number(yearA) - Number(yearB) || months.indexOf(monthA) - months.indexOf(monthB);\n        });\n      }\n      return keys.sort();\n    };\n    \n    const sortedKeys = sortKeys(Object.keys(groupedExpenses));\n    const sortedValues = sortedKeys.map(key => groupedExpenses[key]);\n    \n    setTimeSeriesData({\n      labels: sortedKeys,\n      datasets: [\n        {\n          label: 'Expenses',\n          data: sortedValues,\n          backgroundColor: 'rgba(75, 192, 192, 0.2)',\n          borderColor: 'rgba(75, 192, 192, 1)',\n          borderWidth: 2,\n          tension: 0.3,\n        },\n      ],\n    });\n  }, [expenses, timeFrame]);\n\n  // Chart options\n  const categoryOptions = {\n    plugins: {\n      title: {\n        display: true,\n        text: 'Expenses by Category',\n        font: {\n          size: 16,\n        },\n      },\n    },\n  };\n\n  const timeSeriesOptions = {\n    plugins: {\n      title: {\n        display: true,\n        text: `Expense Trend (${timeFrame.charAt(0).toUpperCase() + timeFrame.slice(1)})`,\n        font: {\n          size: 16,\n        },\n      },\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'Amount ($)',\n        },\n      },\n    },\n  };\n\n  return (\n    <Box>\n      <Typography variant=\"h4\" gutterBottom>\n        Expense Reports\n      </Typography>\n\n      <Box sx={{ mb: 4 }}>\n        <FormControl sx={{ minWidth: 200 }}>\n          <InputLabel id=\"time-frame-select-label\">Time Frame</InputLabel>\n          <Select\n            labelId=\"time-frame-select-label\"\n            id=\"time-frame-select\"\n            value={timeFrame}\n            label=\"Time Frame\"\n            onChange={(e) => setTimeFrame(e.target.value as 'weekly' | 'monthly' | 'yearly')}\n          >\n            <MenuItem value=\"weekly\">Weekly</MenuItem>\n            <MenuItem value=\"monthly\">Monthly</MenuItem>\n            <MenuItem value=\"yearly\">Yearly</MenuItem>\n          </Select>\n        </FormControl>\n      </Box>\n\n      <Grid container spacing={4}>\n        {/* Time Series Chart */}\n        <Grid item xs={12}>\n          <Paper elevation={3} sx={{ p: 3 }}>\n            {expenses.length > 0 ? (\n              <Line options={timeSeriesOptions} data={timeSeriesData} />\n            ) : (\n              <Typography variant=\"body1\" align=\"center\" sx={{ py: 5 }}>\n                No expense data available. Add some expenses to see your trends!\n              </Typography>\n            )}\n          </Paper>\n        </Grid>\n\n        {/* Category Distribution */}\n        <Grid item xs={12} md={6}>\n          <Paper elevation={3} sx={{ p: 3 }}>\n            {expenses.length > 0 ? (\n              <Bar options={categoryOptions} data={categoryData} />\n            ) : (\n              <Typography variant=\"body1\" align=\"center\" sx={{ py: 5 }}>\n                No expense data available.\n              </Typography>\n            )}\n          </Paper>\n        </Grid>\n\n        {/* Pie Chart */}\n        <Grid item xs={12} md={6}>\n          <Paper elevation={3} sx={{ p: 3 }}>\n            {expenses.length > 0 ? (\n              <Box>\n                <Typography variant=\"h6\" align=\"center\" gutterBottom>\n                  Expense Distribution\n                </Typography>\n                <Pie data={categoryData} />\n              </Box>\n            ) : (\n              <Typography variant=\"body1\" align=\"center\" sx={{ py: 5 }}>\n                No expense data available.\n              </Typography>\n            )}\n          </Paper>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default Reports;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,GAAG,EAAEC,UAAU,EAAEC,KAAK,EAAEC,IAAI,EAAEC,WAAW,EAAEC,UAAU,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,eAAe;AACvG,SACEC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MAAM,EACNC,UAAU,EACVC,YAAY,EACZC,WAAW,QACN,UAAU;AACjB,SAASC,GAAG,EAAEC,GAAG,EAAEC,IAAI,QAAQ,iBAAiB;AAChD,SAASC,UAAU,QAAQ,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG3D;AACAf,OAAO,CAACgB,QAAQ,CACdf,aAAa,EACbC,WAAW,EACXC,UAAU,EACVI,UAAU,EACVC,YAAY,EACZC,WAAW,EACXL,KAAK,EACLC,OAAO,EACPC,MACF,CAAC;AAED,MAAMW,OAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM;IAAEC;EAAM,CAAC,GAAGN,UAAU,CAAC,CAAC;EAC9B,MAAM;IAAEO;EAAS,CAAC,GAAGD,KAAK;EAE1B,MAAM,CAACE,SAAS,EAAEC,YAAY,CAAC,GAAGhC,QAAQ,CAAkC,SAAS,CAAC;;EAEtF;EACA,MAAM,CAACiC,YAAY,EAAEC,eAAe,CAAC,GAAGlC,QAAQ,CAS7C;IACDmC,MAAM,EAAE,EAAE;IACVC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,QAAQ;MACfC,IAAI,EAAE,EAAE;MACRC,eAAe,EAAE,EAAE;MACnBC,WAAW,EAAE,EAAE;MACfC,WAAW,EAAE;IACf,CAAC;EAEL,CAAC,CAAC;;EAEF;EACA,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAG3C,QAAQ,CAUjD;IACDmC,MAAM,EAAE,EAAE;IACVC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,UAAU;MACjBC,IAAI,EAAE,EAAE;MACRC,eAAe,EAAE,yBAAyB;MAC1CC,WAAW,EAAE,uBAAuB;MACpCC,WAAW,EAAE,CAAC;MACdG,OAAO,EAAE;IACX,CAAC;EAEL,CAAC,CAAC;EAEF,MAAMC,MAAM,GAAG,CACb,yBAAyB,EACzB,yBAAyB,EACzB,yBAAyB,EACzB,yBAAyB,EACzB,0BAA0B,EAC1B,yBAAyB,EACzB,yBAAyB,EACzB,wBAAwB,EACxB,0BAA0B,EAC1B,wBAAwB,EACxB,0BAA0B,CAC3B;;EAED;EACA9C,SAAS,CAAC,MAAM;IACd,MAAM+C,cAAsC,GAAG,CAAC,CAAC;IAEjDhB,QAAQ,CAACiB,OAAO,CAACC,OAAO,IAAI;MAC1B,MAAM;QAAEC,QAAQ;QAAEC;MAAO,CAAC,GAAGF,OAAO;MACpCF,cAAc,CAACG,QAAQ,CAAC,GAAG,CAACH,cAAc,CAACG,QAAQ,CAAC,IAAI,CAAC,IAAIC,MAAM;IACrE,CAAC,CAAC;IAEF,MAAMC,UAAU,GAAGC,MAAM,CAACC,IAAI,CAACP,cAAc,CAAC;IAC9C,MAAMQ,OAAO,GAAGH,UAAU,CAACI,GAAG,CAACN,QAAQ,IAAIH,cAAc,CAACG,QAAQ,CAAC,CAAC;IACpE,MAAMO,gBAAgB,GAAGL,UAAU,CAACI,GAAG,CAAC,CAACE,CAAC,EAAEC,KAAK,KAAKb,MAAM,CAACa,KAAK,GAAGb,MAAM,CAACc,MAAM,CAAC,CAAC;IACpF,MAAMC,YAAY,GAAGJ,gBAAgB,CAACD,GAAG,CAACM,KAAK,IAAIA,KAAK,CAACC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;IAE7E5B,eAAe,CAAC;MACdC,MAAM,EAAEgB,UAAU;MAClBf,QAAQ,EAAE,CACR;QACEC,KAAK,EAAE,QAAQ;QACfC,IAAI,EAAEgB,OAAO;QACbf,eAAe,EAAEiB,gBAAgB;QACjChB,WAAW,EAAEoB,YAAY;QACzBnB,WAAW,EAAE;MACf,CAAC;IAEL,CAAC,CAAC;EACJ,CAAC,EAAE,CAACX,QAAQ,CAAC,CAAC;;EAEd;EACA/B,SAAS,CAAC,MAAM;IACd;IACA,MAAMgE,qBAAqB,GAAGA,CAAA,KAAM;MAClC,MAAMC,WAAmC,GAAG,CAAC,CAAC;MAE9ClC,QAAQ,CAACiB,OAAO,CAACC,OAAO,IAAI;QAC1B,MAAMiB,IAAI,GAAG,IAAIC,IAAI,CAAClB,OAAO,CAACiB,IAAI,CAAC;QACnC,IAAIE,SAAS,GAAG,EAAE;QAElB,IAAIpC,SAAS,KAAK,QAAQ,EAAE;UAC1B;UACA,MAAMqC,UAAU,GAAGC,aAAa,CAACJ,IAAI,CAAC;UACtC,MAAMK,IAAI,GAAGL,IAAI,CAACM,WAAW,CAAC,CAAC;UAC/BJ,SAAS,GAAG,IAAIC,UAAU,IAAIE,IAAI,EAAE;QACtC,CAAC,MAAM,IAAIvC,SAAS,KAAK,SAAS,EAAE;UAClC;UACAoC,SAAS,GAAG,GAAGF,IAAI,CAACO,cAAc,CAAC,SAAS,EAAE;YAAEC,KAAK,EAAE;UAAQ,CAAC,CAAC,IAAIR,IAAI,CAACM,WAAW,CAAC,CAAC,EAAE;QAC3F,CAAC,MAAM;UACL;UACAJ,SAAS,GAAG,GAAGF,IAAI,CAACM,WAAW,CAAC,CAAC,EAAE;QACrC;QAEAP,WAAW,CAACG,SAAS,CAAC,GAAG,CAACH,WAAW,CAACG,SAAS,CAAC,IAAI,CAAC,IAAInB,OAAO,CAACE,MAAM;MACzE,CAAC,CAAC;MAEF,OAAOc,WAAW;IACpB,CAAC;;IAED;IACA,MAAMK,aAAa,GAAIJ,IAAU,IAAK;MACpC,MAAMS,CAAC,GAAG,IAAIR,IAAI,CAACA,IAAI,CAACS,GAAG,CAACV,IAAI,CAACM,WAAW,CAAC,CAAC,EAAEN,IAAI,CAACW,QAAQ,CAAC,CAAC,EAAEX,IAAI,CAACY,OAAO,CAAC,CAAC,CAAC,CAAC;MACjFH,CAAC,CAACI,UAAU,CAACJ,CAAC,CAACK,UAAU,CAAC,CAAC,GAAG,CAAC,IAAIL,CAAC,CAACM,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;MACvD,MAAMC,SAAS,GAAG,IAAIf,IAAI,CAACA,IAAI,CAACS,GAAG,CAACD,CAAC,CAACQ,cAAc,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;MAC9D,MAAMd,UAAU,GAAGe,IAAI,CAACC,IAAI,CAAC,CAAE,CAACV,CAAC,CAACW,OAAO,CAAC,CAAC,GAAGJ,SAAS,CAACI,OAAO,CAAC,CAAC,IAAI,QAAQ,GAAI,CAAC,IAAI,CAAC,CAAC;MACxF,OAAOjB,UAAU;IACnB,CAAC;IAED,MAAMkB,eAAe,GAAGvB,qBAAqB,CAAC,CAAC;;IAE/C;IACA,MAAMwB,QAAQ,GAAIlC,IAAc,IAAK;MACnC,IAAItB,SAAS,KAAK,QAAQ,EAAE;QAC1B,OAAOsB,IAAI,CAACmC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;UACzB,MAAM,CAACC,KAAK,EAAEC,KAAK,CAAC,GAAGH,CAAC,CAACI,KAAK,CAAC,GAAG,CAAC;UACnC,MAAM,CAACC,KAAK,EAAEC,KAAK,CAAC,GAAGL,CAAC,CAACG,KAAK,CAAC,GAAG,CAAC;UACnC,OAAOG,MAAM,CAACJ,KAAK,CAAC,GAAGI,MAAM,CAACD,KAAK,CAAC,IAAIC,MAAM,CAACL,KAAK,CAACM,SAAS,CAAC,CAAC,CAAC,CAAC,GAAGD,MAAM,CAACF,KAAK,CAACG,SAAS,CAAC,CAAC,CAAC,CAAC;QACjG,CAAC,CAAC;MACJ,CAAC,MAAM,IAAIlE,SAAS,KAAK,SAAS,EAAE;QAClC,MAAMmE,MAAM,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;QACnG,OAAO7C,IAAI,CAACmC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;UACzB,MAAM,CAACS,MAAM,EAAEP,KAAK,CAAC,GAAGH,CAAC,CAACI,KAAK,CAAC,GAAG,CAAC;UACpC,MAAM,CAACO,MAAM,EAAEL,KAAK,CAAC,GAAGL,CAAC,CAACG,KAAK,CAAC,GAAG,CAAC;UACpC,OAAOG,MAAM,CAACJ,KAAK,CAAC,GAAGI,MAAM,CAACD,KAAK,CAAC,IAAIG,MAAM,CAACG,OAAO,CAACF,MAAM,CAAC,GAAGD,MAAM,CAACG,OAAO,CAACD,MAAM,CAAC;QACzF,CAAC,CAAC;MACJ;MACA,OAAO/C,IAAI,CAACmC,IAAI,CAAC,CAAC;IACpB,CAAC;IAED,MAAMc,UAAU,GAAGf,QAAQ,CAACnC,MAAM,CAACC,IAAI,CAACiC,eAAe,CAAC,CAAC;IACzD,MAAMiB,YAAY,GAAGD,UAAU,CAAC/C,GAAG,CAACiD,GAAG,IAAIlB,eAAe,CAACkB,GAAG,CAAC,CAAC;IAEhE7D,iBAAiB,CAAC;MAChBR,MAAM,EAAEmE,UAAU;MAClBlE,QAAQ,EAAE,CACR;QACEC,KAAK,EAAE,UAAU;QACjBC,IAAI,EAAEiE,YAAY;QAClBhE,eAAe,EAAE,yBAAyB;QAC1CC,WAAW,EAAE,uBAAuB;QACpCC,WAAW,EAAE,CAAC;QACdG,OAAO,EAAE;MACX,CAAC;IAEL,CAAC,CAAC;EACJ,CAAC,EAAE,CAACd,QAAQ,EAAEC,SAAS,CAAC,CAAC;;EAEzB;EACA,MAAM0E,eAAe,GAAG;IACtBC,OAAO,EAAE;MACPC,KAAK,EAAE;QACLC,OAAO,EAAE,IAAI;QACbC,IAAI,EAAE,sBAAsB;QAC5BC,IAAI,EAAE;UACJC,IAAI,EAAE;QACR;MACF;IACF;EACF,CAAC;EAED,MAAMC,iBAAiB,GAAG;IACxBN,OAAO,EAAE;MACPC,KAAK,EAAE;QACLC,OAAO,EAAE,IAAI;QACbC,IAAI,EAAE,kBAAkB9E,SAAS,CAACkF,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGnF,SAAS,CAACoF,KAAK,CAAC,CAAC,CAAC,GAAG;QACjFL,IAAI,EAAE;UACJC,IAAI,EAAE;QACR;MACF;IACF,CAAC;IACDK,MAAM,EAAE;MACNC,CAAC,EAAE;QACDC,WAAW,EAAE,IAAI;QACjBX,KAAK,EAAE;UACLC,OAAO,EAAE,IAAI;UACbC,IAAI,EAAE;QACR;MACF;IACF;EACF,CAAC;EAED,oBACEpF,OAAA,CAACxB,GAAG;IAAAsH,QAAA,gBACF9F,OAAA,CAACvB,UAAU;MAACsH,OAAO,EAAC,IAAI;MAACC,YAAY;MAAAF,QAAA,EAAC;IAEtC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eAEbpG,OAAA,CAACxB,GAAG;MAAC6H,EAAE,EAAE;QAAEC,EAAE,EAAE;MAAE,CAAE;MAAAR,QAAA,eACjB9F,OAAA,CAACpB,WAAW;QAACyH,EAAE,EAAE;UAAEE,QAAQ,EAAE;QAAI,CAAE;QAAAT,QAAA,gBACjC9F,OAAA,CAACnB,UAAU;UAAC2H,EAAE,EAAC,yBAAyB;UAAAV,QAAA,EAAC;QAAU;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eAChEpG,OAAA,CAAClB,MAAM;UACL2H,OAAO,EAAC,yBAAyB;UACjCD,EAAE,EAAC,mBAAmB;UACtBE,KAAK,EAAEpG,SAAU;UACjBM,KAAK,EAAC,YAAY;UAClB+F,QAAQ,EAAGC,CAAC,IAAKrG,YAAY,CAACqG,CAAC,CAACC,MAAM,CAACH,KAAwC,CAAE;UAAAZ,QAAA,gBAEjF9F,OAAA,CAACjB,QAAQ;YAAC2H,KAAK,EAAC,QAAQ;YAAAZ,QAAA,EAAC;UAAM;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAU,CAAC,eAC1CpG,OAAA,CAACjB,QAAQ;YAAC2H,KAAK,EAAC,SAAS;YAAAZ,QAAA,EAAC;UAAO;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAU,CAAC,eAC5CpG,OAAA,CAACjB,QAAQ;YAAC2H,KAAK,EAAC,QAAQ;YAAAZ,QAAA,EAAC;UAAM;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAU,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC,eAENpG,OAAA,CAACrB,IAAI;MAACmI,SAAS;MAACC,OAAO,EAAE,CAAE;MAAAjB,QAAA,gBAEzB9F,OAAA,CAACrB,IAAI;QAACqI,IAAI;QAACC,EAAE,EAAE,EAAG;QAAAnB,QAAA,eAChB9F,OAAA,CAACtB,KAAK;UAACwI,SAAS,EAAE,CAAE;UAACb,EAAE,EAAE;YAAEc,CAAC,EAAE;UAAE,CAAE;UAAArB,QAAA,EAC/BzF,QAAQ,CAAC6B,MAAM,GAAG,CAAC,gBAClBlC,OAAA,CAACH,IAAI;YAACuH,OAAO,EAAE7B,iBAAkB;YAAC1E,IAAI,EAAEI;UAAe;YAAAgF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,gBAE1DpG,OAAA,CAACvB,UAAU;YAACsH,OAAO,EAAC,OAAO;YAACsB,KAAK,EAAC,QAAQ;YAAChB,EAAE,EAAE;cAAEiB,EAAE,EAAE;YAAE,CAAE;YAAAxB,QAAA,EAAC;UAE1D;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY;QACb;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eAGPpG,OAAA,CAACrB,IAAI;QAACqI,IAAI;QAACC,EAAE,EAAE,EAAG;QAACM,EAAE,EAAE,CAAE;QAAAzB,QAAA,eACvB9F,OAAA,CAACtB,KAAK;UAACwI,SAAS,EAAE,CAAE;UAACb,EAAE,EAAE;YAAEc,CAAC,EAAE;UAAE,CAAE;UAAArB,QAAA,EAC/BzF,QAAQ,CAAC6B,MAAM,GAAG,CAAC,gBAClBlC,OAAA,CAACL,GAAG;YAACyH,OAAO,EAAEpC,eAAgB;YAACnE,IAAI,EAAEL;UAAa;YAAAyF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,gBAErDpG,OAAA,CAACvB,UAAU;YAACsH,OAAO,EAAC,OAAO;YAACsB,KAAK,EAAC,QAAQ;YAAChB,EAAE,EAAE;cAAEiB,EAAE,EAAE;YAAE,CAAE;YAAAxB,QAAA,EAAC;UAE1D;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY;QACb;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eAGPpG,OAAA,CAACrB,IAAI;QAACqI,IAAI;QAACC,EAAE,EAAE,EAAG;QAACM,EAAE,EAAE,CAAE;QAAAzB,QAAA,eACvB9F,OAAA,CAACtB,KAAK;UAACwI,SAAS,EAAE,CAAE;UAACb,EAAE,EAAE;YAAEc,CAAC,EAAE;UAAE,CAAE;UAAArB,QAAA,EAC/BzF,QAAQ,CAAC6B,MAAM,GAAG,CAAC,gBAClBlC,OAAA,CAACxB,GAAG;YAAAsH,QAAA,gBACF9F,OAAA,CAACvB,UAAU;cAACsH,OAAO,EAAC,IAAI;cAACsB,KAAK,EAAC,QAAQ;cAACrB,YAAY;cAAAF,QAAA,EAAC;YAErD;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACbpG,OAAA,CAACJ,GAAG;cAACiB,IAAI,EAAEL;YAAa;cAAAyF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxB,CAAC,gBAENpG,OAAA,CAACvB,UAAU;YAACsH,OAAO,EAAC,OAAO;YAACsB,KAAK,EAAC,QAAQ;YAAChB,EAAE,EAAE;cAAEiB,EAAE,EAAE;YAAE,CAAE;YAAAxB,QAAA,EAAC;UAE1D;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY;QACb;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACjG,EAAA,CArRID,OAAiB;EAAA,QACHJ,UAAU;AAAA;AAAA0H,EAAA,GADxBtH,OAAiB;AAuRvB,eAAeA,OAAO;AAAC,IAAAsH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}