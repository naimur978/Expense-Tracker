{"ast":null,"code":"const API_BASE_URL = 'http://localhost:8001/api';\nexport const api = {\n  async getExpenses() {\n    const response = await fetch(`${API_BASE_URL}/expenses/`);\n    if (!response.ok) {\n      throw new Error('Failed to fetch expenses');\n    }\n    const data = await response.json();\n    return data.results;\n  },\n  async createExpense(expense) {\n    const response = await fetch(`${API_BASE_URL}/expenses/`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(expense)\n    });\n    if (!response.ok) {\n      throw new Error('Failed to create expense');\n    }\n    return response.json();\n  },\n  async updateExpense(id, expense) {\n    const response = await fetch(`${API_BASE_URL}/expenses/${id}/`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(expense)\n    });\n    if (!response.ok) {\n      throw new Error('Failed to update expense');\n    }\n    return response.json();\n  },\n  async deleteExpense(id) {\n    const response = await fetch(`${API_BASE_URL}/expenses/${id}/`, {\n      method: 'DELETE'\n    });\n    if (!response.ok) {\n      throw new Error('Failed to delete expense');\n    }\n  },\n  async getExpenseSummary(timeframe = 'monthly') {\n    const response = await fetch(`${API_BASE_URL}/expenses/summary/?timeframe=${timeframe}`);\n    if (!response.ok) {\n      throw new Error('Failed to fetch expense summary');\n    }\n    return response.json();\n  }\n};","map":{"version":3,"names":["API_BASE_URL","api","getExpenses","response","fetch","ok","Error","data","json","results","createExpense","expense","method","headers","body","JSON","stringify","updateExpense","id","deleteExpense","getExpenseSummary","timeframe"],"sources":["/Users/naimur/Downloads/Code/ExpenseTracker/frontend/src/services/api.ts"],"sourcesContent":["import { Expense } from '../types/expense';\n\nconst API_BASE_URL = 'http://localhost:8001/api';\n\nexport const api = {\n  async getExpenses() {\n    const response = await fetch(`${API_BASE_URL}/expenses/`);\n    if (!response.ok) {\n      throw new Error('Failed to fetch expenses');\n    }\n    const data = await response.json();\n    return data.results;\n  },\n\n  async createExpense(expense: Omit<Expense, 'id' | 'createdAt'>) {\n    const response = await fetch(`${API_BASE_URL}/expenses/`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(expense),\n    });\n    if (!response.ok) {\n      throw new Error('Failed to create expense');\n    }\n    return response.json();\n  },\n\n  async updateExpense(id: string, expense: Omit<Expense, 'id' | 'createdAt'>) {\n    const response = await fetch(`${API_BASE_URL}/expenses/${id}/`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(expense),\n    });\n    if (!response.ok) {\n      throw new Error('Failed to update expense');\n    }\n    return response.json();\n  },\n\n  async deleteExpense(id: string) {\n    const response = await fetch(`${API_BASE_URL}/expenses/${id}/`, {\n      method: 'DELETE',\n    });\n    if (!response.ok) {\n      throw new Error('Failed to delete expense');\n    }\n  },\n\n  async getExpenseSummary(timeframe: 'weekly' | 'monthly' | 'yearly' = 'monthly') {\n    const response = await fetch(`${API_BASE_URL}/expenses/summary/?timeframe=${timeframe}`);\n    if (!response.ok) {\n      throw new Error('Failed to fetch expense summary');\n    }\n    return response.json();\n  }\n};"],"mappings":"AAEA,MAAMA,YAAY,GAAG,2BAA2B;AAEhD,OAAO,MAAMC,GAAG,GAAG;EACjB,MAAMC,WAAWA,CAAA,EAAG;IAClB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,YAAY,YAAY,CAAC;IACzD,IAAI,CAACG,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;IAC7C;IACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI,CAACE,OAAO;EACrB,CAAC;EAED,MAAMC,aAAaA,CAACC,OAA0C,EAAE;IAC9D,MAAMR,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,YAAY,YAAY,EAAE;MACxDY,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,OAAO;IAC9B,CAAC,CAAC;IACF,IAAI,CAACR,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;IAC7C;IACA,OAAOH,QAAQ,CAACK,IAAI,CAAC,CAAC;EACxB,CAAC;EAED,MAAMS,aAAaA,CAACC,EAAU,EAAEP,OAA0C,EAAE;IAC1E,MAAMR,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,YAAY,aAAakB,EAAE,GAAG,EAAE;MAC9DN,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,OAAO;IAC9B,CAAC,CAAC;IACF,IAAI,CAACR,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;IAC7C;IACA,OAAOH,QAAQ,CAACK,IAAI,CAAC,CAAC;EACxB,CAAC;EAED,MAAMW,aAAaA,CAACD,EAAU,EAAE;IAC9B,MAAMf,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,YAAY,aAAakB,EAAE,GAAG,EAAE;MAC9DN,MAAM,EAAE;IACV,CAAC,CAAC;IACF,IAAI,CAACT,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;IAC7C;EACF,CAAC;EAED,MAAMc,iBAAiBA,CAACC,SAA0C,GAAG,SAAS,EAAE;IAC9E,MAAMlB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,YAAY,gCAAgCqB,SAAS,EAAE,CAAC;IACxF,IAAI,CAAClB,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,iCAAiC,CAAC;IACpD;IACA,OAAOH,QAAQ,CAACK,IAAI,CAAC,CAAC;EACxB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}