{"ast":null,"code":"var _jsxFileName = \"/Users/naimur/Downloads/Code/ExpenseTracker/frontend/src/contexts/ExpenseContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useReducer, useContext, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { saveExpenses, loadExpenses } from '../utils/localStorage';\n\n// Define the state structure\n\n// Define action types\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Initial state\nconst initialState = {\n  expenses: [],\n  filteredExpenses: [],\n  filter: {},\n  loading: false,\n  error: null\n};\n\n// Create context\nconst ExpenseContext = /*#__PURE__*/createContext({\n  state: initialState,\n  dispatch: () => null\n});\n\n// Expense reducer\nconst expenseReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_EXPENSE':\n      {\n        const newExpense = {\n          ...action.payload,\n          id: uuidv4(),\n          createdAt: new Date().toISOString()\n        };\n        const updatedExpenses = [...state.expenses, newExpense];\n\n        // Save to local storage\n        saveExpenses(updatedExpenses);\n        return {\n          ...state,\n          expenses: updatedExpenses,\n          filteredExpenses: applyFilter(updatedExpenses, state.filter)\n        };\n      }\n    case 'EDIT_EXPENSE':\n      {\n        const updatedExpenses = state.expenses.map(expense => expense.id === action.payload.id ? action.payload : expense);\n\n        // Save to local storage\n        saveExpenses(updatedExpenses);\n        return {\n          ...state,\n          expenses: updatedExpenses,\n          filteredExpenses: applyFilter(updatedExpenses, state.filter)\n        };\n      }\n    case 'DELETE_EXPENSE':\n      {\n        const updatedExpenses = state.expenses.filter(expense => expense.id !== action.payload);\n\n        // Save to local storage\n        saveExpenses(updatedExpenses);\n        return {\n          ...state,\n          expenses: updatedExpenses,\n          filteredExpenses: applyFilter(updatedExpenses, state.filter)\n        };\n      }\n    case 'SET_FILTER':\n      {\n        return {\n          ...state,\n          filter: action.payload,\n          filteredExpenses: applyFilter(state.expenses, action.payload)\n        };\n      }\n    case 'SET_ERROR':\n      {\n        return {\n          ...state,\n          error: action.payload\n        };\n      }\n    case 'CLEAR_ERROR':\n      {\n        return {\n          ...state,\n          error: null\n        };\n      }\n    case 'LOAD_EXPENSES':\n      {\n        return {\n          ...state,\n          expenses: action.payload,\n          filteredExpenses: applyFilter(action.payload, state.filter)\n        };\n      }\n    default:\n      return state;\n  }\n};\n\n// Helper function to apply filters\nconst applyFilter = (expenses, filter) => {\n  return expenses.filter(expense => {\n    // Filter by date range\n    if (filter.startDate && new Date(expense.date) < new Date(filter.startDate)) {\n      return false;\n    }\n    if (filter.endDate && new Date(expense.date) > new Date(filter.endDate)) {\n      return false;\n    }\n\n    // Filter by category\n    if (filter.category && expense.category !== filter.category) {\n      return false;\n    }\n\n    // Filter by amount range\n    if (filter.minAmount !== undefined && expense.amount < filter.minAmount) {\n      return false;\n    }\n    if (filter.maxAmount !== undefined && expense.amount > filter.maxAmount) {\n      return false;\n    }\n\n    // Filter by search text\n    if (filter.searchText && !expense.description.toLowerCase().includes(filter.searchText.toLowerCase())) {\n      return false;\n    }\n    return true;\n  });\n};\n\n// Provider component\nexport const ExpenseProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(expenseReducer, initialState);\n\n  // Load expenses from local storage when component mounts\n  useEffect(() => {\n    const savedExpenses = loadExpenses();\n    if (savedExpenses && savedExpenses.length > 0) {\n      dispatch({\n        type: 'LOAD_EXPENSES',\n        payload: savedExpenses\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ExpenseContext.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook for using the expense context\n_s(ExpenseProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = ExpenseProvider;\nexport const useExpense = () => {\n  _s2();\n  const context = useContext(ExpenseContext);\n  if (!context) {\n    throw new Error('useExpense must be used within an ExpenseProvider');\n  }\n  return context;\n};\n_s2(useExpense, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"ExpenseProvider\");","map":{"version":3,"names":["React","createContext","useReducer","useContext","useEffect","v4","uuidv4","saveExpenses","loadExpenses","jsxDEV","_jsxDEV","initialState","expenses","filteredExpenses","filter","loading","error","ExpenseContext","state","dispatch","expenseReducer","action","type","newExpense","payload","id","createdAt","Date","toISOString","updatedExpenses","applyFilter","map","expense","startDate","date","endDate","category","minAmount","undefined","amount","maxAmount","searchText","description","toLowerCase","includes","ExpenseProvider","children","_s","savedExpenses","length","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useExpense","_s2","context","Error","$RefreshReg$"],"sources":["/Users/naimur/Downloads/Code/ExpenseTracker/frontend/src/contexts/ExpenseContext.tsx"],"sourcesContent":["import React, { createContext, useReducer, useContext, ReactNode, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Expense, ExpenseCategory, ExpenseFilter } from '../types/expense';\nimport { saveExpenses, loadExpenses } from '../utils/localStorage';\n\n// Define the state structure\ninterface ExpenseState {\n  expenses: Expense[];\n  filteredExpenses: Expense[];\n  filter: ExpenseFilter;\n  loading: boolean;\n  error: string | null;\n}\n\n// Define action types\ntype ExpenseAction =\n  | { type: 'ADD_EXPENSE'; payload: Omit<Expense, 'id' | 'createdAt'> }\n  | { type: 'EDIT_EXPENSE'; payload: Expense }\n  | { type: 'DELETE_EXPENSE'; payload: string }\n  | { type: 'SET_FILTER'; payload: ExpenseFilter }\n  | { type: 'SET_ERROR'; payload: string }\n  | { type: 'CLEAR_ERROR' }\n  | { type: 'LOAD_EXPENSES'; payload: Expense[] };\n\n// Initial state\nconst initialState: ExpenseState = {\n  expenses: [],\n  filteredExpenses: [],\n  filter: {},\n  loading: false,\n  error: null\n};\n\n// Create context\nconst ExpenseContext = createContext<{\n  state: ExpenseState;\n  dispatch: React.Dispatch<ExpenseAction>;\n}>({\n  state: initialState,\n  dispatch: () => null\n});\n\n// Expense reducer\nconst expenseReducer = (state: ExpenseState, action: ExpenseAction): ExpenseState => {\n  switch (action.type) {\n    case 'ADD_EXPENSE': {\n      const newExpense: Expense = {\n        ...action.payload,\n        id: uuidv4(),\n        createdAt: new Date().toISOString()\n      };\n      const updatedExpenses = [...state.expenses, newExpense];\n      \n      // Save to local storage\n      saveExpenses(updatedExpenses);\n      \n      return {\n        ...state,\n        expenses: updatedExpenses,\n        filteredExpenses: applyFilter(updatedExpenses, state.filter)\n      };\n    }\n    case 'EDIT_EXPENSE': {\n      const updatedExpenses = state.expenses.map(expense => \n        expense.id === action.payload.id ? action.payload : expense\n      );\n      \n      // Save to local storage\n      saveExpenses(updatedExpenses);\n      \n      return {\n        ...state,\n        expenses: updatedExpenses,\n        filteredExpenses: applyFilter(updatedExpenses, state.filter)\n      };\n    }\n    case 'DELETE_EXPENSE': {\n      const updatedExpenses = state.expenses.filter(expense => expense.id !== action.payload);\n      \n      // Save to local storage\n      saveExpenses(updatedExpenses);\n      \n      return {\n        ...state,\n        expenses: updatedExpenses,\n        filteredExpenses: applyFilter(updatedExpenses, state.filter)\n      };\n    }\n    case 'SET_FILTER': {\n      return {\n        ...state,\n        filter: action.payload,\n        filteredExpenses: applyFilter(state.expenses, action.payload)\n      };\n    }\n    case 'SET_ERROR': {\n      return {\n        ...state,\n        error: action.payload\n      };\n    }\n    case 'CLEAR_ERROR': {\n      return {\n        ...state,\n        error: null\n      };\n    }\n    case 'LOAD_EXPENSES': {\n      return {\n        ...state,\n        expenses: action.payload,\n        filteredExpenses: applyFilter(action.payload, state.filter)\n      };\n    }\n    default:\n      return state;\n  }\n};\n\n// Helper function to apply filters\nconst applyFilter = (expenses: Expense[], filter: ExpenseFilter): Expense[] => {\n  return expenses.filter(expense => {\n    // Filter by date range\n    if (filter.startDate && new Date(expense.date) < new Date(filter.startDate)) {\n      return false;\n    }\n    if (filter.endDate && new Date(expense.date) > new Date(filter.endDate)) {\n      return false;\n    }\n    \n    // Filter by category\n    if (filter.category && expense.category !== filter.category) {\n      return false;\n    }\n    \n    // Filter by amount range\n    if (filter.minAmount !== undefined && expense.amount < filter.minAmount) {\n      return false;\n    }\n    if (filter.maxAmount !== undefined && expense.amount > filter.maxAmount) {\n      return false;\n    }\n    \n    // Filter by search text\n    if (filter.searchText && !expense.description.toLowerCase().includes(filter.searchText.toLowerCase())) {\n      return false;\n    }\n    \n    return true;\n  });\n};\n\n// Provider component\nexport const ExpenseProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\n  const [state, dispatch] = useReducer(expenseReducer, initialState);\n  \n  // Load expenses from local storage when component mounts\n  useEffect(() => {\n    const savedExpenses = loadExpenses();\n    if (savedExpenses && savedExpenses.length > 0) {\n      dispatch({ type: 'LOAD_EXPENSES', payload: savedExpenses });\n    }\n  }, []);\n  \n  return (\n    <ExpenseContext.Provider value={{ state, dispatch }}>\n      {children}\n    </ExpenseContext.Provider>\n  );\n};\n\n// Custom hook for using the expense context\nexport const useExpense = () => {\n  const context = useContext(ExpenseContext);\n  if (!context) {\n    throw new Error('useExpense must be used within an ExpenseProvider');\n  }\n  return context;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}